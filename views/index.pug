//-
	Index.pug

	This is the home page for this project. It is configured to auto-connect
	to the server's websocket and handle any events fired from the server end.
//-

extends base

//- The visual portion of the page
block content
	div(class='panel panel-default')
		div.panel-body
			h1 MQTT Tracker
			p Simple Website for tracking population 'heat maps' using MQTT

			// Implement the graphics portion in the canvas supplied below
			div.well
				canvas(id='grid')
	
	div(class='panel')
		div.panel-body
			button(class='btn btn-primary', type='button', data-toggle='collapse', data-target='#debugLog', aria-expanded='false', aria-controls='debugLog') Show Debug Log
			div(id='debugLog', class='collapse')
				div(id='debugLogList', class='well')

//- The scripts needed by this page
block scripts
	script(type='text/javascript').
		$(() => {
			var socket = io();

			// Handle socket events here
			//--------------------------
			// Adds to the debug list
			socket.on('debug', data => {
				var time = new Date();
				$('#debugLogList').append('<div>' + time + ': ' + data.type + ' | ' + data.msg + '</div>');
			});

			socket.on('entered-region', data => {
				var time = new Date();
				$('#debugLogList').append('<div>' + time + ': ' + data.region + '</div>');
				updateCanvas(data.region, data.count);

			});

			socket.on('leave-region', data => {
				var time = new Date();
				$('#debugLogList').append('<div>' + time + ': ' + data.region + '</div>');
				updateCanvas(data.region, data.count);
			});
			//--------------------------
		});

		function updateCanvas(region, count){
			var canvas = document.getElementById("grid");
			var ctx=canvas.getContext("2d");
			ctx.font="20px Comic Sans MS";
			ctx.fillStyle = "red";
			ctx.textAlign = "center";
			console.log(count +"      " + region);
			if(region === 1){
				console.log("passed check")
				ctx.fillText(count, canvas.width/4-canvas.width/8, canvas.height/1.5);
			}
			else if(region === 1){
				ctx.fillText(count, 2*(canvas.width/4)-canvas.width/8, canvas.height/1.5);
			}
			else if(region === 1){
				ctx.fillText(count, 3*(canvas.width/4)-canvas.width/8, canvas.height/1.5);
			}
			else if(region === 1){
				ctx.fillText(count, 4*(canvas.width/4)-canvas.width/8, canvas.height/1.5);
			}
		}
	
	script(type='text/javascript').
		$(() => {
			// Handle any canvas code here
			//----------------------------
			var canvas = document.getElementById("grid");
			var ctx=canvas.getContext("2d");
			ctx.moveTo(canvas.width/4,0);
			ctx.lineTo(canvas.width/4,canvas.height);
			ctx.stroke();
			ctx.moveTo(2*(canvas.width/4),0);
			ctx.lineTo(2*(canvas.width/4),canvas.height);
			ctx.stroke();
			ctx.moveTo(3*(canvas.width/4),0);
			ctx.lineTo(3*(canvas.width/4),canvas.height);
			ctx.stroke();

			ctx.font="20px Comic Sans MS";
			ctx.fillStyle = "red";
			ctx.textAlign = "center";
			ctx.fillText("Region", canvas.width/4-canvas.width/8, canvas.height/3);
			ctx.fillText(0, canvas.width/4-canvas.width/8, canvas.height/1.5);
			ctx.fillText("Region", 2*(canvas.width/4)-canvas.width/8, canvas.height/3);
			ctx.fillText(0, 2*(canvas.width/4)-canvas.width/8, canvas.height/1.5);
			ctx.fillText("Region", 3*(canvas.width/4)-canvas.width/8, canvas.height/3);
			ctx.fillText(0, 3*(canvas.width/4)-canvas.width/8, canvas.height/1.5);
			ctx.fillText("Region", 4*(canvas.width/4)-canvas.width/8, canvas.height/3);
			ctx.fillText(0, 4*(canvas.width/4)-canvas.width/8, canvas.height/1.5);
			
			//----------------------------
		});